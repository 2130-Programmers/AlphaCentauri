// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2130.AlphaCentauri.subsystems;


import org.usfirst.frc2130.AlphaCentauri.Robot;
import org.usfirst.frc2130.AlphaCentauri.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.DoubleSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class intakeSubsystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private DoubleSolenoid positionSolenoid;
    private DoubleSolenoid rocketPlacementSolenoid;
    private WPI_VictorSPX leftRollerMotor;
    private WPI_VictorSPX rightRollerMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public boolean handlerPositionSetting;

    private int i;

    public intakeSubsystem() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        positionSolenoid = new DoubleSolenoid(0, 4, 5);
        addChild("positionSolenoid",positionSolenoid);
        
        
        rocketPlacementSolenoid = new DoubleSolenoid(0, 6, 7);
        addChild("rocketPlacementSolenoid",rocketPlacementSolenoid);
        
        
        leftRollerMotor = new WPI_VictorSPX(6);
        
        
        
        rightRollerMotor = new WPI_VictorSPX(7);
        
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new RocketPlacementBackCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void handlerPlayPosition() {
        positionSolenoid.set(Value.kForward);
    }

    public void handlerDefensePosition() {
        positionSolenoid.set(Value.kReverse);
    }

    public void handlerPosition() {
        if (handlerPositionSetting) {
            positionSolenoid.set(Value.kForward);
        }
        else {
            positionSolenoid.set(Value.kReverse);
        }
    }
    public void startingPosition() {
        handlerPositionSetting = true;
        positionSolenoid.set(Value.kForward);
    }
    public void setHandlerBoolean() {
        if(i == 0 && Robot.oi.handlerPositionValue()) {
            handlerPositionSetting = !handlerPositionSetting;
            i++;
        } else if (!Robot.oi.handlerPositionValue()){
            i = 0;
        }
    
    }

    public void handlerRocketForward() {
        rocketPlacementSolenoid.set(Value.kForward);
    }
    public void handlerRocketBackward() {
        rocketPlacementSolenoid.set(Value.kReverse);
    }
}

